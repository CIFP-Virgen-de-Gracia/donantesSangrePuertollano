{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(router) {\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (!localStorage.getItem('user')) {\n      this.router.navigate(['']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n  canMatch(route, segments) {\n    if (!localStorage.getItem('user')) {\n      this.router.navigate(['']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAY;EAEtCC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IACxB,IAAI,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MACjC,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B,OAAO,KAAK;KACb,MACI;MACH,OAAO,IAAI;;EAGjB;EACAC,QAAQ,CACNL,KAAY,EACZM,QAAsB;IACpB,IAAI,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,EAAE;MACjC,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MAC1B,OAAO,KAAK;KACb,MACI;MACH,OAAO,IAAI;;EAEjB;;AA1BWR,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","router","canActivate","route","state","localStorage","getItem","navigate","canMatch","segments","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\auth\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanLoad, CanMatch, Route, Router, RouterStateSnapshot, UrlSegment, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanMatch {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (!localStorage.getItem('user')) {\r\n        this.router.navigate(['']);\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }\r\n\r\n  }\r\n  canMatch(\r\n    route: Route,\r\n    segments: UrlSegment[]): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n      if (!localStorage.getItem('user')) {\r\n        this.router.navigate(['']);\r\n        return false;\r\n      }\r\n      else {\r\n        return true;\r\n      }    \r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}