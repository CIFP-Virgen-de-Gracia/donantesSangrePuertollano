{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SharedService {\n  /* https://www.c-sharpcorner.com/article/easily-share-data-between-two-unrelated-components-in-angular/ */\n  /* https://stackoverflow.com/a/51992202 */\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl + '/api';\n    this.comprobarPermisos = new Subject();\n    this.citaPedida = new Subject();\n  }\n  suscripcionNewsletter(email) {\n    return this.http.post(`${this.baseUrl}/suscripcionNewsletter`, email);\n  }\n  getIntegrantesCargo() {\n    return this.http.get(`${this.baseUrl}/getIntegrantesCargo`);\n  }\n  getHistoria() {\n    return this.http.get(`${this.baseUrl}/getHistoria`);\n  }\n  getHorarios() {\n    return this.http.get(`${this.baseUrl}/getHorarios`);\n  }\n  getTelefonos() {\n    return this.http.get(`${this.baseUrl}/getTelefonos`);\n  }\n  getDirecciones() {\n    return this.http.get(`${this.baseUrl}/getDirecciones`);\n  }\n}\nSharedService.ɵfac = function SharedService_Factory(t) {\n  return new (t || SharedService)(i0.ɵɵinject(i1.HttpClient));\n};\nSharedService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SharedService,\n  factory: SharedService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,QAAQ,MAAM;AAC1C,SAASC,WAAW,QAAQ,6BAA6B;;;AAOzD,OAAM,MAAOC,aAAa;EAKxB;EACA;EAGAC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAPxB,YAAO,GAAGH,WAAW,CAACI,OAAO,GAAG,MAAM;IAQpC,IAAI,CAACC,iBAAiB,GAAG,IAAIN,OAAO,EAAW;IAC/C,IAAI,CAACO,UAAU,GAAG,IAAIP,OAAO,EAAU;EACzC;EAGAQ,qBAAqB,CAACC,KAAY;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACL,OAAO,wBAAwB,EAAEI,KAAK,CAAC;EAC5E;EAGAE,mBAAmB;IACjB,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAM,GAAG,IAAI,CAACP,OAAO,sBAAsB,CAAC;EAClE;EAGAQ,WAAW;IACT,OAAO,IAAI,CAACT,IAAI,CAACQ,GAAG,CAAM,GAAG,IAAI,CAACP,OAAO,cAAc,CAAC;EAC1D;EAGAS,WAAW;IACT,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAkB,GAAG,IAAI,CAACP,OAAO,cAAc,CAAC;EACtE;EAGAU,YAAY;IACV,OAAO,IAAI,CAACX,IAAI,CAACQ,GAAG,CAAmB,GAAG,IAAI,CAACP,OAAO,eAAe,CAAC;EACxE;EAGAW,cAAc;IACZ,OAAO,IAAI,CAACZ,IAAI,CAACQ,GAAG,CAAoB,GAAG,IAAI,CAACP,OAAO,iBAAiB,CAAC;EAC3E;;AA1CWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAe,SAAbf,aAAa;EAAAgB,YAFZ;AAAM","names":["Subject","environment","SharedService","constructor","http","baseUrl","comprobarPermisos","citaPedida","suscripcionNewsletter","email","post","getIntegrantesCargo","get","getHistoria","getHorarios","getTelefonos","getDirecciones","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\shared\\services\\shared.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { environment } from 'src/environment/environment';\r\nimport { DireccionResponse, Email, HorarioResponse, TelefonoResponse } from '../interfaces/shared.interface';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SharedService {\r\n\r\n  baseUrl = environment.baseUrl + '/api';\r\n  comprobarPermisos: Subject<boolean>;\r\n  citaPedida: Subject<number>;\r\n  /* https://www.c-sharpcorner.com/article/easily-share-data-between-two-unrelated-components-in-angular/ */\r\n  /* https://stackoverflow.com/a/51992202 */\r\n\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.comprobarPermisos = new Subject<boolean>();\r\n    this.citaPedida = new Subject<number>();\r\n  }\r\n\r\n\r\n  suscripcionNewsletter(email: Email): Observable<any> {\r\n    return this.http.post<any>(`${this.baseUrl}/suscripcionNewsletter`, email);\r\n  }\r\n\r\n\r\n  getIntegrantesCargo(): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}/getIntegrantesCargo`);\r\n  }\r\n\r\n\r\n  getHistoria(): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}/getHistoria`);\r\n  }\r\n\r\n\r\n  getHorarios(): Observable<HorarioResponse> {\r\n    return this.http.get<HorarioResponse>(`${this.baseUrl}/getHorarios`);\r\n  }\r\n\r\n\r\n  getTelefonos(): Observable<TelefonoResponse> {\r\n    return this.http.get<TelefonoResponse>(`${this.baseUrl}/getTelefonos`);\r\n  }\r\n\r\n\r\n  getDirecciones(): Observable<DireccionResponse> {\r\n    return this.http.get<DireccionResponse>(`${this.baseUrl}/getDirecciones`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}