{"ast":null,"code":"import { tap } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConfigService {\n  constructor(http) {\n    this.http = http;\n    this.configUrl = `${environment.baseUrl}/api`;\n    this.canciones = [];\n  }\n  //Alicia\n  updateHermandad(historia, junta) {\n    const header = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.put(`${this.configUrl}/updateHermandad`, {\n      historia: historia,\n      junta: junta\n    }, header);\n  }\n  //Alicia\n  updateContacto(dirs, tlfns, horarios) {\n    const header = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.put(`${this.configUrl}/updateContacto`, {\n      direcciones: dirs,\n      telefonos: tlfns,\n      horarios: horarios\n    }, header);\n  }\n  //Alicia\n  getCargosJunta() {\n    return this.http.get(`${this.configUrl}/getCargosJunta`);\n  }\n  //Audio o Himnos (Toda la parte del Audio Isa)\n  get audios() {\n    return [...this.canciones];\n  }\n  getListadoAudio() {\n    return this.http.get(`${this.configUrl}/musica/listado`).pipe(tap(resp => {\n      if (resp.success !== false) {\n        this.canciones = resp.data;\n      }\n    }));\n  }\n  agregarAudio(cancion) {\n    this.canciones.unshift(cancion);\n  }\n  addAudio(cancion) {\n    const payload = new FormData();\n    payload.append('titulo', cancion.titulo);\n    payload.append('letra', cancion.letra);\n    payload.append('archivo', cancion.archivo);\n    const header = {\n      headers: new HttpHeaders({\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.post(`${this.configUrl}/musica/insertar`, payload, header);\n  }\n  borrarHimno(id) {\n    let audios = this.canciones.filter(c => c.id != id);\n    this.canciones = audios;\n  }\n  borrarAudio(id) {\n    const header = {\n      headers: new HttpHeaders({\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.delete(`${this.configUrl}/musica/borrar/${id}`, header);\n  }\n  borrarHimnoTodos() {\n    this.canciones = [];\n  }\n  borrarTodos() {\n    const header = {\n      headers: new HttpHeaders({\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.delete(`${this.configUrl}/musica/borrar`, header);\n  }\n  editarAudio(id, cancion) {\n    const payload = new FormData();\n    payload.append('id', id);\n    payload.append('titulo', cancion.titulo);\n    payload.append('letra', cancion.letra);\n    payload.append('archivo', cancion.cancion);\n    const header = {\n      headers: new HttpHeaders({\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.put(`${this.configUrl}/musica/modificar/`, payload, header);\n  }\n  obtenerCancion(id) {\n    const header = {\n      headers: new HttpHeaders({\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.post(`${this.configUrl}/musica/get`, {\n      id: id\n    }, header);\n  }\n  editarCancion(cancion) {\n    let posicion = this.canciones.findIndex(c => c.id == cancion.id);\n    this.canciones[posicion] = cancion;\n  }\n  getPreguntas() {\n    return this.http.get(`${this.configUrl}/test-apto/mostrarPreguntas`);\n  }\n  subirFoto(archivo) {\n    return this.http.post(`${this.configUrl}/galeria/insertarGaleria_imagen`, archivo);\n  }\n  borrarImagenes(id) {\n    return this.http.delete(`${this.configUrl}/galeria/borrarGaleria_Imagen/${id}`);\n  }\n  añadirPregunta(pregunta) {\n    const payload = new FormData();\n    if (pregunta.nombre_img != \"\") {\n      payload.append('enunciado', pregunta.enunciado);\n      payload.append('titulo', pregunta.titulo);\n      payload.append('archivo', pregunta.nombre_img);\n      payload.append('respuesta', pregunta.respuesta.toString());\n      payload.append('solucion_problema', pregunta.solucion_problema);\n    } else {\n      payload.append('enunciado', pregunta.enunciado);\n      payload.append('titulo', pregunta.titulo);\n      payload.append('respuesta', pregunta.respuesta.toString());\n      payload.append('solucion_problema', pregunta.solucion_problema);\n    }\n    return this.http.post(`${this.configUrl}/test-apto/generarPregunta/`, payload);\n  }\n  modificarPregunta(id, pregunta) {\n    const payload = new FormData();\n    if (pregunta.nombre_img == '') {\n      payload.append('enunciado', pregunta.enunciado);\n      payload.append('titulo', pregunta.titulo);\n      payload.append('respuesta', pregunta.respuesta.toString());\n      payload.append('solucion_problema', pregunta.solucion_problema);\n    } else {\n      payload.append('enunciado', pregunta.enunciado);\n      payload.append('titulo', pregunta.titulo);\n      payload.append('archivo', pregunta.nombre_img);\n      payload.append('respuesta', pregunta.respuesta.toString());\n      payload.append('solucion_problema', pregunta.solucion_problema);\n    }\n    return this.http.put(`${this.configUrl}/test-apto/modificarPregunta/${id}`, payload);\n  }\n  borrarPregunta(id) {\n    return this.http.delete(`${this.configUrl}/test-apto/borrarPregunta/${id}`);\n  }\n}\nConfigService.ɵfac = function ConfigService_Factory(t) {\n  return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n};\nConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigService,\n  factory: ConfigService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["tap","HttpHeaders","environment","ConfigService","constructor","http","baseUrl","canciones","updateHermandad","historia","junta","header","headers","JSON","parse","localStorage","getItem","token","put","configUrl","updateContacto","dirs","tlfns","horarios","direcciones","telefonos","getCargosJunta","get","audios","getListadoAudio","pipe","resp","success","data","agregarAudio","cancion","unshift","addAudio","payload","FormData","append","titulo","letra","archivo","post","borrarHimno","id","filter","c","borrarAudio","delete","borrarHimnoTodos","borrarTodos","editarAudio","obtenerCancion","editarCancion","posicion","findIndex","getPreguntas","subirFoto","borrarImagenes","añadirPregunta","pregunta","nombre_img","enunciado","respuesta","toString","solucion_problema","modificarPregunta","borrarPregunta","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\config\\services\\config.service.ts"],"sourcesContent":["import { Observable, tap } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environment/environment';\r\nimport { Integrante } from 'src/app/shared/interfaces/shared.interface';\r\nimport { cargoResponse, Direccion, HorarioGuardar, Telefono, TelefonoGuardar } from '../interfaces/config.interface';\r\nimport { updateResponse } from '../interfaces/config.interface';\r\nimport { Cancion, ResponseAudio, Himno, ResponseCancion } from '../interfaces/config.interface';\r\nimport { Pregunta } from '../../apto-sangre/interface/pregunta';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  configUrl = `${environment.baseUrl}/api`;\r\n  private canciones: Cancion[];\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.canciones = [];\r\n  }\r\n\r\n  //Alicia\r\n  updateHermandad(historia:String, junta:Integrante[]): Observable<updateResponse> {\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'x-token' : JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n\r\n    return this.http.put<updateResponse>(`${this.configUrl}/updateHermandad`, { historia: historia, junta: junta}, header);\r\n  }\r\n\r\n  //Alicia\r\n  updateContacto(dirs: Direccion[], tlfns: TelefonoGuardar, horarios: HorarioGuardar): Observable<updateResponse> {\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-token': JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n\r\n    return this.http.put<updateResponse>(\r\n      `${this.configUrl}/updateContacto`,\r\n      {\r\n        direcciones: dirs,\r\n        telefonos: tlfns,\r\n        horarios: horarios\r\n      },\r\n      header\r\n    );\r\n  }\r\n\r\n  //Alicia\r\n  getCargosJunta(): Observable<cargoResponse>{\r\n    return this.http.get<cargoResponse>(`${this.configUrl}/getCargosJunta`);\r\n  }\r\n\r\n\r\n  //Audio o Himnos (Toda la parte del Audio Isa)\r\n  get audios() {\r\n    return [...this.canciones];\r\n  }\r\n  getListadoAudio(): Observable<ResponseAudio> {\r\n    return this.http.get<ResponseAudio>(`${this.configUrl}/musica/listado`).pipe(tap(resp => { if (resp.success !== false) { this.canciones = resp.data } }))\r\n  }\r\n  agregarAudio(cancion: Cancion) {\r\n    this.canciones.unshift(cancion);\r\n  }\r\n\r\n  addAudio(cancion: Himno): Observable<ResponseCancion> {\r\n    const payload = new FormData();\r\n    payload.append('titulo', cancion.titulo);\r\n    payload.append('letra', cancion.letra);\r\n    payload.append('archivo', cancion.archivo);\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'x-token': JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n\r\n    return this.http.post<ResponseCancion>(`${this.configUrl}/musica/insertar`, payload, header);\r\n  }\r\n  borrarHimno(id: string) {\r\n    let audios = this.canciones.filter((c) => c.id != id);\r\n    this.canciones = audios;\r\n  }\r\n\r\n  borrarAudio(id: string): Observable<ResponseCancion> {\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'x-token': JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n\r\n    return this.http.delete<ResponseCancion>(`${this.configUrl}/musica/borrar/${id}`, header);\r\n  }\r\n  borrarHimnoTodos() {\r\n    this.canciones = [];\r\n  }\r\n\r\n  borrarTodos(): Observable<ResponseAudio> {\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'x-token': JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n\r\n    return this.http.delete<ResponseAudio>(`${this.configUrl}/musica/borrar`, header);\r\n  }\r\n\r\n  editarAudio(id: string, cancion: Cancion): Observable<ResponseCancion> {\r\n    const payload = new FormData();\r\n    payload.append('id', id);\r\n    payload.append('titulo', cancion.titulo);\r\n    payload.append('letra', cancion.letra);\r\n    payload.append('archivo', cancion.cancion);\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'x-token': JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n    return this.http.put<ResponseCancion>(`${this.configUrl}/musica/modificar/`, payload, header);\r\n  }\r\n  obtenerCancion(id: string): Observable<ResponseCancion> {\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'x-token': JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n\r\n    return this.http.post<ResponseCancion>(`${this.configUrl}/musica/get`,{id:id},header);\r\n  }\r\n  editarCancion(cancion: Cancion) {\r\n    let posicion = this.canciones.findIndex(c => c.id == cancion.id);\r\n    this.canciones[posicion] = cancion;\r\n  }\r\n\r\n  getPreguntas(): Observable<Pregunta[]>{\r\n    return this.http.get<Pregunta[]>(`${this.configUrl}/test-apto/mostrarPreguntas`)\r\n  }\r\n\r\n  subirFoto(archivo:FormData): Observable<FormData> {\r\n    return this.http.post<any>(`${this.configUrl}/galeria/insertarGaleria_imagen`, archivo);\r\n  }\r\n\r\n  borrarImagenes(id:any): Observable<any>{\r\n    return this.http.delete<any>(`${this.configUrl}/galeria/borrarGaleria_Imagen/${id}`);\r\n  }\r\n\r\n  añadirPregunta(pregunta : Pregunta): Observable<any>{\r\n      const payload = new FormData();\r\n\r\n      if(pregunta.nombre_img != \"\"){\r\n\r\n        payload.append('enunciado', pregunta.enunciado);\r\n        payload.append('titulo', pregunta.titulo);\r\n        payload.append('archivo', pregunta.nombre_img);\r\n        payload.append('respuesta', pregunta.respuesta.toString());\r\n        payload.append('solucion_problema', pregunta.solucion_problema);\r\n\r\n      }\r\n      else{\r\n        payload.append('enunciado', pregunta.enunciado);\r\n        payload.append('titulo', pregunta.titulo);\r\n        payload.append('respuesta', pregunta.respuesta.toString());\r\n        payload.append('solucion_problema', pregunta.solucion_problema);\r\n      }\r\n\r\n      return this.http.post<any>(`${this.configUrl}/test-apto/generarPregunta/`, payload);\r\n  }\r\n\r\n  modificarPregunta(id:any, pregunta: Pregunta): Observable<any>{\r\n    const payload = new FormData();\r\n    if(pregunta.nombre_img == ''){\r\n      payload.append('enunciado', pregunta.enunciado);\r\n      payload.append('titulo', pregunta.titulo);\r\n      payload.append('respuesta', pregunta.respuesta.toString());\r\n      payload.append('solucion_problema', pregunta.solucion_problema);\r\n    } else{\r\n      payload.append('enunciado', pregunta.enunciado);\r\n      payload.append('titulo', pregunta.titulo);\r\n      payload.append('archivo', pregunta.nombre_img);\r\n      payload.append('respuesta', pregunta.respuesta.toString());\r\n      payload.append('solucion_problema', pregunta.solucion_problema);\r\n\r\n    }\r\n\r\n      return this.http.put<any>(`${this.configUrl}/test-apto/modificarPregunta/${id}`, payload);\r\n  }\r\n\r\n  borrarPregunta(id:any): Observable<any>{\r\n    return this.http.delete<any>(`${this.configUrl}/test-apto/borrarPregunta/${id}`);\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}