{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ContactoConfigComponent = class ContactoConfigComponent {\n  constructor(ConfigService, fb) {\n    this.ConfigService = ConfigService;\n    this.fb = fb;\n    this.mensaje = '';\n    this.telefonos = [];\n    this.direcciones = [];\n    this.horarios = [];\n    this.hMostrar = [];\n  }\n  ngOnInit() {\n    this.ConfigService.getHorarios().subscribe(resp => {\n      if (resp.success) {\n        this.horarios = resp.data;\n        this.crearHorarioMostrar();\n      }\n    });\n    this.ConfigService.getTelefonos().subscribe(resp => {\n      if (resp.success) this.telefonos = resp.data;\n    });\n    this.ConfigService.getDirecciones().subscribe(resp => {\n      if (resp.success) this.direcciones = resp.data;\n    });\n  }\n  guardar() {\n    this.ConfigService.updateContacto(this.direcciones, this.telefonos, this.crearHorarioGuardar()).subscribe(resp => {\n      this.mensaje = resp.msg;\n      this.actualizado = resp.success ? true : false;\n      setTimeout(() => this.mensaje = '', 4000);\n    });\n  }\n  addTelefono() {}\n  addHorario() {}\n  crearHorarioGuardar() {\n    let hGuardar = [];\n    let hBorrar = [];\n    this.hMostrar.forEach(horario => {\n      horario.dias.forEach(d => {\n        if (d.seleccionado) {\n          hGuardar.push({\n            id: d.id,\n            dia: d.valor,\n            hEntrada: horario.hEntrada,\n            hSalida: horario.hSalida\n          });\n        } else if (d.id != -1) hBorrar.push(d.id);\n      });\n    });\n    return {\n      guardar: hGuardar,\n      borrar: hBorrar\n    };\n  }\n  crearHorarioMostrar() {\n    const dSemana = [{\n      nombre: \"Lunes\",\n      letra: \"L\"\n    }, {\n      nombre: \"Martes\",\n      letra: \"M\"\n    }, {\n      nombre: \"Miércoles\",\n      letra: \"X\"\n    }, {\n      nombre: \"Jueves\",\n      letra: \"J\"\n    }, {\n      nombre: \"Viernes\",\n      letra: \"V\"\n    }];\n    let horas = [];\n    let diasHora = [];\n    let listaDias;\n    let idDia;\n    this.horarios.forEach(horario => {\n      if (!horas.find(h => h.entrada == horario.hEntrada && h.salida == horario.hSalida)) horas.push({\n        \"entrada\": horario.hEntrada,\n        \"salida\": horario.hSalida\n      });\n    });\n    horas.forEach(hora => {\n      listaDias = [];\n      diasHora = this.horarios.filter(h => h.hEntrada == hora.entrada && h.hSalida == hora.salida);\n      dSemana.forEach(dia => {\n        idDia = diasHora.find(d => d.dia == dia.nombre)?.id;\n        listaDias.push({\n          id: idDia ? idDia : -1,\n          valor: dia.nombre,\n          letra: dia.letra,\n          seleccionado: diasHora.find(d => d.dia == dia.nombre) ? true : false\n        });\n      });\n      this.hMostrar.push({\n        dias: listaDias,\n        hEntrada: hora.entrada,\n        hSalida: hora.salida\n      });\n    });\n  }\n};\nContactoConfigComponent = __decorate([Component({\n  selector: 'app-contacto-config',\n  templateUrl: './contacto-config.component.html',\n  styleUrls: ['./contacto-config.component.scss']\n})], ContactoConfigComponent);\nexport { ContactoConfigComponent };","map":{"version":3,"mappings":"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","names":["Component","ContactoConfigComponent","constructor","ConfigService","fb","ngOnInit","getHorarios","subscribe","resp","success","horarios","data","crearHorarioMostrar","getTelefonos","telefonos","getDirecciones","direcciones","guardar","updateContacto","crearHorarioGuardar","mensaje","msg","actualizado","setTimeout","addTelefono","addHorario","hGuardar","hBorrar","hMostrar","forEach","horario","dias","d","seleccionado","push","id","dia","valor","hEntrada","hSalida","borrar","dSemana","nombre","letra","horas","diasHora","listaDias","idDia","find","h","entrada","salida","hora","filter","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\config\\contacto-config\\contacto-config.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Dia, Direccion, Horario, HorarioMostrar, Telefono, Hora, HorarioGuardar } from '../interfaces/config.interface';\r\nimport { ConfigService } from '../services/config.service';\r\n\r\n@Component({\r\n  selector: 'app-contacto-config',\r\n  templateUrl: './contacto-config.component.html',\r\n  styleUrls: ['./contacto-config.component.scss']\r\n})\r\nexport class ContactoConfigComponent {\r\n\r\n  contactoForm!: FormGroup;\r\n  mensaje: String = '';\r\n  actualizado!: boolean;\r\n  telefonos: Telefono[] = [];\r\n  direcciones: Direccion[] = [];\r\n  horarios: Horario[] = [];\r\n  hMostrar: HorarioMostrar[] = [];\r\n\r\n  constructor(private ConfigService: ConfigService,  private fb: FormBuilder,) { }\r\n\r\n\r\n  ngOnInit() {\r\n    this.ConfigService.getHorarios().subscribe(resp => {\r\n      if (resp.success) {\r\n        this.horarios = resp.data;\r\n        this.crearHorarioMostrar();\r\n      }\r\n    });\r\n\r\n\r\n    this.ConfigService.getTelefonos().subscribe(resp => {\r\n      if (resp.success) this.telefonos = resp.data;\r\n    });\r\n\r\n\r\n    this.ConfigService.getDirecciones().subscribe(resp => {\r\n      if (resp.success) this.direcciones = resp.data;\r\n    });\r\n  }\r\n\r\n\r\n  guardar() {\r\n    this.ConfigService.updateContacto(this.direcciones, this.telefonos, this.crearHorarioGuardar())\r\n      .subscribe(resp => {\r\n\r\n        this.mensaje = resp.msg;\r\n        this.actualizado = (resp.success) ? true : false;\r\n\r\n        setTimeout(() => this.mensaje = '', 4000);\r\n      });\r\n  }\r\n\r\n\r\n  addTelefono() {\r\n\r\n  }\r\n\r\n\r\n  addHorario() {\r\n\r\n  }\r\n\r\n\r\n  crearHorarioGuardar() {\r\n    let hGuardar: Horario[] = [];\r\n    let hBorrar: number[] = [];\r\n\r\n    this.hMostrar.forEach(horario => {\r\n\r\n      horario.dias.forEach(d => {\r\n\r\n        if (d.seleccionado) {\r\n          hGuardar.push({\r\n            id: d.id,\r\n            dia: d.valor,\r\n            hEntrada: horario.hEntrada,\r\n            hSalida: horario.hSalida,\r\n          });\r\n        } else if (d.id != -1) hBorrar.push(d.id);\r\n      })\r\n    });\r\n\r\n    return { guardar: hGuardar, borrar: hBorrar };\r\n  }\r\n\r\n\r\n  crearHorarioMostrar() {\r\n    const dSemana = [{nombre:\"Lunes\", letra:\"L\"}, {nombre:\"Martes\", letra:\"M\"},{nombre:\"Miércoles\", letra:\"X\"},\r\n                    {nombre:\"Jueves\", letra:\"J\"},{nombre:\"Viernes\", letra:\"V\"}];\r\n    let horas: Hora[] = [];\r\n    let diasHora: Horario[] = [];\r\n    let listaDias: Dia[];\r\n    let idDia: number | undefined;\r\n\r\n    this.horarios.forEach(horario => {\r\n      if (!horas.find(h => h.entrada == horario.hEntrada && h.salida == horario.hSalida))\r\n        horas.push({ \"entrada\": horario.hEntrada, \"salida\": horario.hSalida });\r\n    });\r\n\r\n    horas.forEach(hora => {\r\n      listaDias = [];\r\n      diasHora = this.horarios.filter(h => h.hEntrada == hora.entrada && h.hSalida == hora.salida);\r\n\r\n      dSemana.forEach(dia => {\r\n        idDia = diasHora.find(d => d.dia == dia.nombre)?.id;\r\n        listaDias.push({\r\n          id: (idDia) ? idDia : -1,\r\n          valor: dia.nombre,\r\n          letra: dia.letra,\r\n          seleccionado: (diasHora.find(d => d.dia == dia.nombre)) ? true : false\r\n        })\r\n      });\r\n\r\n      this.hMostrar.push({\r\n        dias: listaDias,\r\n        hEntrada: hora.entrada,\r\n        hSalida: hora.salida\r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}