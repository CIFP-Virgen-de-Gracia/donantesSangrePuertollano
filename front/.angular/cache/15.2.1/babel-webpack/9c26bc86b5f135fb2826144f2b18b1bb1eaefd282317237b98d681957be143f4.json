{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ConfigService {\n  constructor(http) {\n    this.http = http;\n    this.configUrl = `${environment.baseUrl}/api`;\n  }\n  updateHermandad(historia, junta) {\n    const header = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.put(`${this.configUrl}/updateHermandad`, {\n      historia: historia,\n      junta: junta\n    }, header);\n  }\n  updateContacto(dirs, tlfns, horarios) {\n    const header = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-token': JSON.parse(localStorage.getItem('user')).token\n      })\n    };\n    return this.http.put(`${this.configUrl}/updateContacto`, {\n      direcciones: dirs,\n      telefonos: tlfns,\n      horarios: horarios\n    }, header);\n  }\n  getCargosJunta() {\n    return this.http.get(`${this.configUrl}/getCargosJunta`);\n  }\n  getHorarios() {\n    return this.http.get(`${this.configUrl}/getHorarios`);\n  }\n  getTelefonos() {\n    return this.http.get(`${this.configUrl}/getTelefonos`);\n  }\n  getDirecciones() {\n    return this.http.get(`${this.configUrl}/getDirecciones`);\n  }\n}\nConfigService.ɵfac = function ConfigService_Factory(t) {\n  return new (t || ConfigService)(i0.ɵɵinject(i1.HttpClient));\n};\nConfigService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ConfigService,\n  factory: ConfigService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAASC,WAAW,QAAQ,6BAA6B;;;AAWzD,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,cAAS,GAAG,GAAGH,WAAW,CAACI,OAAO,MAAM;EAEA;EAGxCC,eAAe,CAACC,QAAe,EAAEC,KAAkB;IACjD,MAAMC,MAAM,GAAG;MACbC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,SAAS,EAAGW,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC,CAACC;OACvD;KACF;IAED,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAiB,GAAG,IAAI,CAACC,SAAS,kBAAkB,EAAE;MAAEV,QAAQ,EAAEA,QAAQ;MAAEC,KAAK,EAAEA;IAAK,CAAC,EAAEC,MAAM,CAAC;EACxH;EAGAS,cAAc,CAACC,IAAiB,EAAEC,KAAsB,EAAEC,QAAwB;IAChF,MAAMZ,MAAM,GAAG;MACbC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACvB,cAAc,EAAG,kBAAkB;QACnC,SAAS,EAAGW,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC,CAACC;OACvD;KACF;IAED,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAClB,GAAG,IAAI,CAACC,SAAS,iBAAiB,EAClC;MACEK,WAAW,EAAEH,IAAI;MACjBI,SAAS,EAAEH,KAAK;MAChBC,QAAQ,EAAEA;KACX,EACDZ,MAAM,CACP;EACH;EAGAe,cAAc;IACZ,OAAO,IAAI,CAACpB,IAAI,CAACqB,GAAG,CAAgB,GAAG,IAAI,CAACR,SAAS,iBAAiB,CAAC;EACzE;EAGAS,WAAW;IACT,OAAO,IAAI,CAACtB,IAAI,CAACqB,GAAG,CAAkB,GAAG,IAAI,CAACR,SAAS,cAAc,CAAC;EACxE;EAGAU,YAAY;IACV,OAAO,IAAI,CAACvB,IAAI,CAACqB,GAAG,CAAmB,GAAG,IAAI,CAACR,SAAS,eAAe,CAAC;EAC1E;EAGAW,cAAc;IACZ,OAAO,IAAI,CAACxB,IAAI,CAACqB,GAAG,CAAoB,GAAG,IAAI,CAACR,SAAS,iBAAiB,CAAC;EAC7E;;AAxDWf,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAA2B,SAAb3B,aAAa;EAAA4B,YAFZ;AAAM","names":["HttpHeaders","environment","ConfigService","constructor","http","baseUrl","updateHermandad","historia","junta","header","headers","JSON","parse","localStorage","getItem","token","put","configUrl","updateContacto","dirs","tlfns","horarios","direcciones","telefonos","getCargosJunta","get","getHorarios","getTelefonos","getDirecciones","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\config\\services\\config.service.ts"],"sourcesContent":["import { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from 'src/environment/environment';\r\nimport { Integrante } from 'src/app/shared/interfaces/shared.interface';\r\nimport { cargoResponse, Direccion, HorarioGuardar, Telefono, TelefonoGuardar } from '../interfaces/config.interface';\r\nimport { horarioResponse } from '../interfaces/config.interface';\r\nimport { telefonoResponse } from '../interfaces/config.interface';\r\nimport { direccionResponse } from '../interfaces/config.interface';\r\nimport { updateResponse } from '../interfaces/config.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n\r\n  configUrl = `${environment.baseUrl}/api`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  updateHermandad(historia:String, junta:Integrante[]): Observable<updateResponse> {\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'x-token' : JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n\r\n    return this.http.put<updateResponse>(`${this.configUrl}/updateHermandad`, { historia: historia, junta: junta}, header);\r\n  }\r\n\r\n\r\n  updateContacto(dirs: Direccion[], tlfns: TelefonoGuardar, horarios: HorarioGuardar): Observable<updateResponse> {\r\n    const header = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type':  'application/json',\r\n        'x-token' : JSON.parse(localStorage.getItem('user')!).token\r\n      })\r\n    };\r\n\r\n    return this.http.put<updateResponse>(\r\n      `${this.configUrl}/updateContacto`,\r\n      {\r\n        direcciones: dirs,\r\n        telefonos: tlfns,\r\n        horarios: horarios\r\n      },\r\n      header\r\n    );\r\n  }\r\n\r\n\r\n  getCargosJunta(): Observable<cargoResponse>{\r\n    return this.http.get<cargoResponse>(`${this.configUrl}/getCargosJunta`);\r\n  }\r\n\r\n\r\n  getHorarios(): Observable<horarioResponse> {\r\n    return this.http.get<horarioResponse>(`${this.configUrl}/getHorarios`);\r\n  }\r\n\r\n\r\n  getTelefonos(): Observable<telefonoResponse> {\r\n    return this.http.get<telefonoResponse>(`${this.configUrl}/getTelefonos`);\r\n  }\r\n\r\n\r\n  getDirecciones(): Observable<direccionResponse> {\r\n    return this.http.get<direccionResponse>(`${this.configUrl}/getDirecciones`);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}