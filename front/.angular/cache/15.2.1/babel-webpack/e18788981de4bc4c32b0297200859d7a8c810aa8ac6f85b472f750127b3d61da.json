{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/citas.service\";\nimport * as i2 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/shared/services/shared.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"../date-picker/date-picker.component\";\nfunction PedirCitaPacienteComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1, \"Selecciona una hora\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PedirCitaPacienteComponent_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1, \" No hay horas disponibles \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PedirCitaPacienteComponent_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const hora_r3 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", hora_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", hora_r3, \" \");\n  }\n}\nexport class PedirCitaPacienteComponent {\n  constructor(pedirCitaHttpService, calendar, router, sharedService) {\n    this.pedirCitaHttpService = pedirCitaHttpService;\n    this.calendar = calendar;\n    this.router = router;\n    this.sharedService = sharedService;\n    this.onCitaPedida = new EventEmitter();\n    this.sinSeleccionar = true;\n    this.registrado = false;\n    this.noHayHoras = false;\n    this.horasDisponibles = [];\n    this.citaPedida = -1;\n    this.citaForm = new FormGroup({\n      hora: new FormControl('', [Validators.required]),\n      donacion: new FormControl('sangre', [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.sinSeleccionar = true;\n    this.fecha = this.calendar.getToday();\n    this.transFecha(this.fecha);\n    this.compRegistro();\n  }\n  compRegistro() {\n    this.registrado = localStorage.getItem('user') != null;\n  }\n  transFecha(fechaCalendar) {\n    this.fechaSeleccionada = this.fecha.year + '-' + this.fecha.month + '-' + this.fecha.day;\n  }\n  traerHorario() {\n    this.pedirCitaHttpService.fetchHorasDisponibles(this.fechaSeleccionada).subscribe(resp => {\n      this.horasDisponibles = resp.horas;\n      if (this.horasDisponibles.length == 0) this.noHayHoras = true;\n    });\n  }\n  setDia(event) {\n    this.fecha = event;\n    this.transFecha(this.fecha);\n    this.traerHorario();\n    this.sinSeleccionar = false;\n  }\n  pedirCita() {\n    const id = JSON.parse(localStorage.getItem('user') || '{}').id;\n    const fechaCita = this.fechaSeleccionada + ' ' + this.citaForm.get('hora')?.value + ':00';\n    const tipoDonacion = this.citaForm.get('donacion')?.value;\n    this.pedirCitaHttpService.insertCita(id, fechaCita, tipoDonacion).subscribe(resp => {\n      if (resp.success) {\n        setTimeout(() => {\n          this.sharedService.citaPedida.next(0);\n        }, 1500);\n      } else {\n        setTimeout(() => {\n          this.sharedService.citaPedida.next(1);\n        }, 1500);\n      }\n      this.router.navigate(['']);\n    });\n  }\n}\nPedirCitaPacienteComponent.ɵfac = function PedirCitaPacienteComponent_Factory(t) {\n  return new (t || PedirCitaPacienteComponent)(i0.ɵɵdirectiveInject(i1.CitasService), i0.ɵɵdirectiveInject(i2.NgbCalendar), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.SharedService));\n};\nPedirCitaPacienteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PedirCitaPacienteComponent,\n  selectors: [[\"app-pedir-cita-paciente\"]],\n  outputs: {\n    onCitaPedida: \"onCitaPedida\"\n  },\n  decls: 34,\n  vars: 5,\n  consts: [[1, \"container-fluid\", \"fondo\", \"px-2\", \"py-5\", \"p-md-5\"], [1, \"row\"], [1, \"col-0\", \"col-sm-1\", \"col-lg-2\"], [1, \"col-12\", \"col-sm-10\", \"col-lg-8\", \"contenedor\"], [1, \"card\", \"border-0\", \"rounded-0\", \"w-100\", \"mb-0\"], [1, \"card-header\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"py-1\", \"border-bottom-0\"], [1, \"card-body\", \"p-5\", \"mt-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"col-12\", \"col-md-6\", \"d-flex\", \"justify-content-center\", \"mb-4\", \"mb-md-0\"], [3, \"onNuevaFecha\"], [1, \"col-12\", \"col-md-6\"], [1, \"col-12\"], [\"formControlName\", \"hora\", \"name\", \"hora\", 1, \"form-select\", \"form-select-sm\", \"mb-3\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\", \"hidden\", \"\", 4, \"ngIf\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\", \"hidden\", \"\"], [4, \"ngIf\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"donacion\", \"name\", \"donacion\", 1, \"form-select\", \"form-select-sm\"], [\"value\", \"sangre\", \"selected\", \"\"], [\"value\", \"plasma\"], [1, \"card-body\", \"p-0\", \"mt-5\"], [\"type\", \"submit\", 1, \"btn\", \"w-100\", \"btnAceptar\", \"mb-3\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"w-100\", \"border-red\"], [1, \"col-0\", \"col-sm-1\", \"col-lg-3\"], [3, \"value\"]],\n  template: function PedirCitaPacienteComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"div\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h1\");\n      i0.ɵɵtext(7, \"Pedir cita\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 6)(9, \"form\", 7);\n      i0.ɵɵlistener(\"ngSubmit\", function PedirCitaPacienteComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.pedirCita();\n      });\n      i0.ɵɵelementStart(10, \"div\", 1)(11, \"div\", 8)(12, \"app-date-picker\", 9);\n      i0.ɵɵlistener(\"onNuevaFecha\", function PedirCitaPacienteComponent_Template_app_date_picker_onNuevaFecha_12_listener($event) {\n        return ctx.setDia($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 1)(15, \"div\", 11)(16, \"select\", 12);\n      i0.ɵɵtemplate(17, PedirCitaPacienteComponent_option_17_Template, 2, 0, \"option\", 13);\n      i0.ɵɵelementStart(18, \"option\", 14);\n      i0.ɵɵtext(19, \"Horas disponibles\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, PedirCitaPacienteComponent_option_20_Template, 2, 0, \"option\", 15);\n      i0.ɵɵtemplate(21, PedirCitaPacienteComponent_option_21_Template, 2, 2, \"option\", 16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 11)(23, \"select\", 17)(24, \"option\", 18);\n      i0.ɵɵtext(25, \"Sangre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"option\", 19);\n      i0.ɵɵtext(27, \"Plasma\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(28, \"div\", 20)(29, \"button\", 21);\n      i0.ɵɵtext(30, \"Aceptar\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"button\", 22);\n      i0.ɵɵtext(32, \"Cancelar\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(33, \"div\", 23);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.citaForm);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngIf\", ctx.sinSeleccionar);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.noHayHoras);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.horasDisponibles);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"disabled\", ctx.citaForm.invalid);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.FormGroupDirective, i6.FormControlName, i7.DatePickerComponent],\n  styles: [\"div.alert[_ngcontent-%COMP%] {\\n  z-index: 9000;\\n  width: 25rem;\\n}\\ndiv.alert[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\\n  text-decoration: none;\\n  color: rgb(9, 43, 9);\\n}\\ndiv.alert[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover {\\n  color: rgb(2, 51, 2);\\n}\\n\\ndiv.container-fluid[_ngcontent-%COMP%] {\\n  background-color: var(--color-contraste);\\n  min-height: 80vh;\\n}\\ndiv.container-fluid[_ngcontent-%COMP%]   div.card[_ngcontent-%COMP%] {\\n  box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\\n}\\ndiv.container-fluid[_ngcontent-%COMP%]   div.card[_ngcontent-%COMP%]   div.card-header[_ngcontent-%COMP%] {\\n  background-color: var(--color-primario);\\n  color: var(--bs-white);\\n  height: 9rem;\\n  border-radius: 2px 2px 0px 0px;\\n}\\ndiv.container-fluid[_ngcontent-%COMP%]   div.card[_ngcontent-%COMP%]   div.card-body[_ngcontent-%COMP%] {\\n  margin-bottom: 2.5rem;\\n}\\ndiv.container-fluid[_ngcontent-%COMP%]   div.card[_ngcontent-%COMP%]   div.card-body[_ngcontent-%COMP%]   div.calendario[_ngcontent-%COMP%] {\\n  height: 15rem;\\n  width: 20rem;\\n  background-color: green;\\n}\\ndiv.container-fluid[_ngcontent-%COMP%]   div.card[_ngcontent-%COMP%]   div.card-body[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  width: 10rem;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2l0YXMvcGVkaXItY2l0YS1wYWNpZW50ZS9wZWRpci1jaXRhLXBhY2llbnRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLFlBQUE7QUFDSjtBQUNJO0VBQ0kscUJBQUE7RUFDQSxvQkFBQTtBQUNSO0FBQ1E7RUFDSSxvQkFBQTtBQUNaOztBQUlBO0VBQ0ksd0NBQUE7RUFDQSxnQkFBQTtBQURKO0FBR0k7RUFDSSx3Q0FBQTtBQURSO0FBS1E7RUFDSSx1Q0FBQTtFQUNBLHNCQUFBO0VBQ0EsWUFBQTtFQUVBLDhCQUFBO0FBSlo7QUFRUTtFQUNJLHFCQUFBO0FBTlo7QUFRWTtFQUNJLGFBQUE7RUFDQSxZQUFBO0VBQ0EsdUJBQUE7QUFOaEI7QUFTWTtFQUNHLFlBQUE7QUFQZiIsInNvdXJjZXNDb250ZW50IjpbImRpdi5hbGVydCB7XHJcbiAgICB6LWluZGV4OiA5MDAwO1xyXG4gICAgd2lkdGg6IDI1cmVtO1xyXG5cclxuICAgIGEge1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICBjb2xvcjogcmdiKDksIDQzLCA5KTtcclxuXHJcbiAgICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgICAgIGNvbG9yOiByZ2IoMiwgNTEsIDIpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG5cclxuZGl2LmNvbnRhaW5lci1mbHVpZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1jb250cmFzdGUpO1xyXG4gICAgbWluLWhlaWdodDogODB2aDtcclxuXHJcbiAgICBkaXYuY2FyZCB7XHJcbiAgICAgICAgYm94LXNoYWRvdzogMCAzcHggOXB4IHJnYmEoMCwgMCwgMCwgLjUpO1xyXG4gICAgICAgIC8vIHdpZHRoOiA0MHZ3O1xyXG5cclxuICAgICAgICBcclxuICAgICAgICBkaXYuY2FyZC1oZWFkZXIge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb2xvci1wcmltYXJpbyk7XHJcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1icy13aGl0ZSk7XHJcbiAgICAgICAgICAgIGhlaWdodDogOXJlbTtcclxuXHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDJweCAycHggMHB4IDBweDtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBkaXYuY2FyZC1ib2R5IHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMi41cmVtO1xyXG5cclxuICAgICAgICAgICAgZGl2LmNhbGVuZGFyaW8ge1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxNXJlbTtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAyMHJlbTtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IGdyZWVuO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBidXR0b24ge1xyXG4gICAgICAgICAgICAgICB3aWR0aDogMTByZW07XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0gICAgXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","FormControl","FormGroup","Validators","i0","PedirCitaPacienteComponent","constructor","pedirCitaHttpService","calendar","router","sharedService","hora","required","donacion","ngOnInit","sinSeleccionar","fecha","getToday","transFecha","compRegistro","registrado","localStorage","getItem","fechaCalendar","fechaSeleccionada","year","month","day","traerHorario","fetchHorasDisponibles","subscribe","resp","horasDisponibles","horas","length","noHayHoras","setDia","event","pedirCita","id","JSON","parse","fechaCita","citaForm","get","value","tipoDonacion","insertCita","success","setTimeout","citaPedida","next","navigate","selectors","outputs","onCitaPedida","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\citas\\pedir-cita-paciente\\pedir-cita-paciente.component.ts","C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\citas\\pedir-cita-paciente\\pedir-cita-paciente.component.html"],"sourcesContent":["import { Component, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { CitasService } from '../services/citas.service';\r\nimport { FormControl, FormGroup, Validators, FormsModule } from '@angular/forms';\r\nimport { NgbDateStruct, NgbCalendar, NgbDatepickerModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { DatePickerComponent } from '../date-picker/date-picker.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Route, Router } from '@angular/router';\r\nimport { SharedService } from 'src/app/shared/services/shared.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-pedir-cita-paciente',\r\n  templateUrl: './pedir-cita-paciente.component.html',\r\n  styleUrls: ['./pedir-cita-paciente.component.scss'],\r\n})\r\nexport class PedirCitaPacienteComponent {\r\n\r\n  @Output() onCitaPedida: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  fecha: NgbDateStruct;\r\n  sinSeleccionar = true;\r\n  registrado: boolean = false;\r\n  noHayHoras: boolean = false;\r\n  horasDisponibles: string[] = [];\r\n  fechaSeleccionada: string;\r\n  citaPedida: number = -1;\r\n\r\n  citaForm: FormGroup = new FormGroup({\r\n    hora: new FormControl('', [Validators.required]),\r\n    donacion: new FormControl('sangre', [Validators.required])\r\n  });\r\n\r\n\r\n  constructor(\r\n    private pedirCitaHttpService: CitasService,\r\n    private calendar: NgbCalendar,\r\n    private router: Router,\r\n    private sharedService: SharedService\r\n    ) {}\r\n\r\n  ngOnInit() {\r\n    this.sinSeleccionar = true;\r\n    this.fecha = this.calendar.getToday();\r\n    this.transFecha(this.fecha);\r\n    this.compRegistro();\r\n  }\r\n\r\n\r\n  compRegistro() {\r\n     this.registrado = localStorage.getItem('user') != null;\r\n  }\r\n\r\n\r\n  transFecha(fechaCalendar: NgbDateStruct) {\r\n    this.fechaSeleccionada = this.fecha.year + '-' + this.fecha.month + '-' + this.fecha.day;\r\n  }\r\n\r\n\r\n  traerHorario() {\r\n    this.pedirCitaHttpService.fetchHorasDisponibles(this.fechaSeleccionada).subscribe(resp => {\r\n      this.horasDisponibles = resp.horas;\r\n      if (this.horasDisponibles.length == 0) this.noHayHoras = true;\r\n    });\r\n  }\r\n\r\n\r\n  setDia(event: NgbDateStruct) {\r\n    this.fecha = event;\r\n    this.transFecha(this.fecha);\r\n    this.traerHorario();\r\n    this.sinSeleccionar = false;\r\n  }\r\n\r\n\r\n  pedirCita() {\r\n    const id = JSON.parse(localStorage.getItem('user') || '{}').id;\r\n    const fechaCita = this.fechaSeleccionada\r\n      + ' ' + this.citaForm.get('hora')?.value + ':00';\r\n\r\n    const tipoDonacion = this.citaForm.get('donacion')?.value;\r\n\r\n    this.pedirCitaHttpService.insertCita(id, fechaCita, tipoDonacion).subscribe(resp => {\r\n      if (resp.success) {\r\n\r\n        setTimeout(() => {  \r\n          this.sharedService.citaPedida.next(0);\r\n        }, 1500);\r\n      }\r\n      else {\r\n\r\n        setTimeout(() => {\r\n          this.sharedService.citaPedida.next(1);\r\n        }, 1500);\r\n      }\r\n\r\n      this.router.navigate(['']);\r\n    });\r\n  }\r\n}\r\n","<!-- <div *ngIf=\"this.registradoExito == 0\" class=\"alert alert-success alert-dismissible position-fixed fade show ms-3\" role=\"alert\">\r\n  El registro se ha realizado correctamente. Te hemos mandado un correo de confirmación.\r\n  Pincha en el enlace para poder acceder con tu cuenta.\r\n  <a (click)=\"irAlLogin()\" class=\"pe-auto\"><strong>Ir al login</strong></a>. -->\r\n\r\n  <div class=\"container-fluid fondo px-2 py-5 p-md-5\">\r\n    <div class=\"row\">\r\n      <div class=\"col-0 col-sm-1 col-lg-2\"></div>\r\n  \r\n      <div class=\"col-12 col-sm-10 col-lg-8 contenedor\">\r\n        <div class=\"card border-0 rounded-0 w-100 mb-0\">\r\n          <div class=\"card-header d-flex justify-content-center align-items-center py-1 border-bottom-0\">\r\n            <h1>Pedir cita</h1>\r\n          </div>\r\n          <div class=\"card-body p-5 mt-5\">\r\n            <form [formGroup]=\"citaForm\" (ngSubmit)=\"pedirCita()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-12 col-md-6 d-flex justify-content-center mb-4 mb-md-0\">\r\n                  <app-date-picker (onNuevaFecha)=\"setDia($event)\"></app-date-picker>\r\n                </div>\r\n                <div class=\"col-12 col-md-6\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                      <select formControlName=\"hora\" name=\"hora\" class=\"form-select form-select-sm mb-3\">\r\n                        <option *ngIf=\"this.sinSeleccionar\" value=\"\" disabled selected hidden>Selecciona una hora</option>\r\n                        <option value=\"\" disabled selected hidden>Horas disponibles</option>\r\n                        <option *ngIf=\"this.noHayHoras\">\r\n                          No hay horas disponibles\r\n                        </option>\r\n                        <option *ngFor=\"let hora of this.horasDisponibles\" value=\"{{ hora }}\">\r\n                          {{ hora }}\r\n                        </option>\r\n                      </select>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                      <select formControlName=\"donacion\" name=\"donacion\" class=\"form-select form-select-sm\">\r\n                        <option value=\"sangre\" selected>Sangre</option>\r\n                        <option value=\"plasma\">Plasma</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n  \r\n              <div class=\"card-body p-0 mt-5\">\r\n                <button type=\"submit\" class=\"btn w-100 btnAceptar mb-3\" [disabled]=\"citaForm.invalid\">Aceptar</button>\r\n                <button type=\"button\" class=\"btn w-100 border-red\">Cancelar</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"col-0 col-sm-1 col-lg-3\"></div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}