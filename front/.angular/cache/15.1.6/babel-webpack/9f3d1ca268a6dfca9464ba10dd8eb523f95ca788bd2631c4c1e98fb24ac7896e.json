{"ast":null,"code":"import { tap } from 'rxjs';\nimport { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContenidoService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.baseUrl;\n    this.noticias = [];\n  }\n  getListado() {\n    return this.http.get(`${this.baseUrl}/api/noticias/noticias`).pipe(tap(resp => {\n      if (resp !== \"No encontrada\") {\n        this.noticias = resp;\n      }\n    }));\n  }\n  get resultado() {\n    return [...this.noticias];\n  }\n  agregar(noticia) {\n    this.noticias.unshift(noticia);\n  }\n  editar(id, noticia) {\n    let posicion = this.noticias.findIndex(n => n.id == id);\n    this.noticias[posicion] = noticia;\n  }\n  borrar(id) {\n    let not = this.noticias.filter(noticia => noticia.id != id);\n    this.noticias = not;\n  }\n  borrarNoticia(id) {\n    return this.http.delete(`${this.baseUrl}/api/noticias/borrar/${id}`);\n  }\n  editarNoticia(id, noticia) {\n    console.log(noticia);\n    const payload = new FormData();\n    payload.append('id', id);\n    payload.append('titulo', noticia.titulo);\n    payload.append('subtitulo', noticia.subtitulo);\n    payload.append('contenido', noticia.contenido);\n    payload.append('seccion', noticia.seccion);\n    payload.append('archivo', noticia.imagen);\n    return this.http.put(`${this.baseUrl}/api/noticias/modificar/`, payload);\n  }\n  obtenerNoticia(id) {\n    let idnot = {\n      id: id\n    };\n    return this.http.post(`${this.baseUrl}/api/noticias/get`, idnot);\n  }\n  añadirNoticia(noticia) {\n    const payload = new FormData();\n    payload.append('titulo', noticia.titulo);\n    payload.append('subtitulo', noticia.subtitulo);\n    payload.append('contenido', noticia.contenido);\n    payload.append('seccion', noticia.seccion);\n    payload.append('archivo', noticia.imagen);\n    return this.http.post(`${this.baseUrl}/api/noticias/registrar`, payload);\n  }\n}\nContenidoService.ɵfac = function ContenidoService_Factory(t) {\n  return new (t || ContenidoService)(i0.ɵɵinject(i1.HttpClient));\n};\nContenidoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ContenidoService,\n  factory: ContenidoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["tap","environment","ContenidoService","constructor","http","baseUrl","noticias","getListado","get","pipe","resp","resultado","agregar","noticia","unshift","editar","id","posicion","findIndex","n","borrar","not","filter","borrarNoticia","delete","editarNoticia","console","log","payload","FormData","append","titulo","subtitulo","contenido","seccion","imagen","put","obtenerNoticia","idnot","post","añadirNoticia","factory","providedIn"],"sourceRoot":"","sources":["/home/mario/donantesSangrePuertollano/front/src/app/gestion-contenido/contenido.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Contenido } from './Interfaces/Contenido.interface';\nimport { tap } from 'rxjs';\nimport { environment } from 'src/environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContenidoService {\n\n  baseUrl = environment.baseUrl;\n  private noticias: any[];\n\n  constructor(private http: HttpClient) {\n    this.noticias = [];\n  }\n\n  getListado() {\n    return this.http.get<any>(`${this.baseUrl}/api/noticias/noticias`).pipe(tap(resp => { if (resp !== \"No encontrada\") { this.noticias = resp } }))\n  }\n\n\n  get resultado() {\n    return [...this.noticias];\n  }\n\n\n  agregar(noticia: any) {\n    this.noticias.unshift(noticia);\n  }\n\n\n  editar(id: string, noticia: any) {\n    let posicion = this.noticias.findIndex(n => n.id == id);\n\n    this.noticias[posicion] = noticia;\n  }\n\n\n  borrar(id: string) {\n    let not = this.noticias.filter((noticia) => noticia.id != id);\n    this.noticias = not;\n  }\n\n\n  borrarNoticia(id: string): Observable<any> {\n    return this.http.delete<any>(`${this.baseUrl}/api/noticias/borrar/${id}`);\n  }\n\n\n  editarNoticia(id: string, noticia: Contenido): Observable<any> {\n    console.log(noticia);\n    const payload = new FormData();\n    payload.append('id', id);\n    payload.append('titulo', noticia.titulo);\n    payload.append('subtitulo', noticia.subtitulo);\n    payload.append('contenido', noticia.contenido);\n    payload.append('seccion', noticia.seccion);\n    payload.append('archivo', noticia.imagen);\n\n\n    return this.http.put<any>(`${this.baseUrl}/api/noticias/modificar/`, payload);\n  }\n\n\n  obtenerNoticia(id: string): Observable<any> {\n    let idnot = {\n      id: id\n    }\n    return this.http.post<any>(`${this.baseUrl}/api/noticias/get`, idnot);\n  }\n  \n\n  añadirNoticia(noticia: Contenido): Observable<any> {\n    const payload = new FormData();\n    payload.append('titulo', noticia.titulo);\n    payload.append('subtitulo', noticia.subtitulo);\n    payload.append('contenido', noticia.contenido);\n    payload.append('seccion', noticia.seccion);\n    payload.append('archivo', noticia.imagen);\n\n    return this.http.post<any>(`${this.baseUrl}/api/noticias/registrar`, payload);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}