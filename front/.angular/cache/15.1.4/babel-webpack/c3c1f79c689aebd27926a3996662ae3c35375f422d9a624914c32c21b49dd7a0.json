{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./servicio/servicio.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../shared/newsletter/newsletter-ventana/newsletter-ventana.component\";\nimport * as i5 from \"./preguntas/preguntas.component\";\nconst _c0 = [\"siguiente\"];\nfunction AptoSangreComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-preguntas\", 8);\n    i0.ɵɵlistener(\"botonAparece\", function AptoSangreComponent_ng_container_5_Template_app_preguntas_botonAparece_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.mostrarBoton($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pregunta\", ctx_r0.preguntas[ctx_r0.contador]);\n  }\n}\nexport class AptoSangreComponent {\n  constructor(servicio, renderer2, router) {\n    this.servicio = servicio;\n    this.renderer2 = renderer2;\n    this.router = router;\n    this.hayHueco = true;\n    this.contador = 0;\n    this.respuestas = [];\n    this.preguntas = [];\n    this.preguntas_respuestas = [];\n  }\n  ngOnInit() {\n    this.servicio.getPreguntas().subscribe(pregunta => {\n      this.preguntas = pregunta;\n    });\n  }\n  ngAfterViewInit() {\n    const boton = this.boton_siguiente.nativeElement;\n    this.renderer2.setStyle(boton, 'visibility', 'hidden');\n  }\n  mostrarBoton(event) {\n    const boton = this.boton_siguiente.nativeElement;\n    this.renderer2.setStyle(boton, 'visibility', 'unset');\n    if (this.hayHueco) {\n      this.respuestas.push(event);\n      this.hayHueco = false;\n    } else {\n      this.respuestas[this.respuestas.length - 1] = event;\n    }\n    console.log(this.respuestas);\n  }\n  evaluarRespuesta() {\n    if (this.respuestas[this.respuestas.length - 1] == this.preguntas[this.contador].respuesta) {\n      if (this.contador < this.preguntas.length - 1) {\n        this.contador++;\n        this.hayHueco = true;\n        const boton = this.boton_siguiente.nativeElement;\n        this.renderer2.setStyle(boton, 'visibility', 'hidden');\n      } else {\n        console.log(\"Ha superado la maxima cantidad de preguntas\");\n        this.preguntas_respuestas = [this.preguntas.slice(0, this.contador + 1), this.respuestas];\n        this.servicio.preguntasEnviadas = this.preguntas_respuestas;\n        this.router.navigate(['/resultado'], {\n          skipLocationChange: true\n        });\n      }\n    } else {\n      this.preguntas_respuestas = [this.preguntas.slice(0, this.contador + 1), this.respuestas];\n      this.servicio.preguntasEnviadas = this.preguntas_respuestas;\n      this.router.navigate(['/resultado'], {\n        skipLocationChange: true\n      });\n    }\n  }\n}\nAptoSangreComponent.ɵfac = function AptoSangreComponent_Factory(t) {\n  return new (t || AptoSangreComponent)(i0.ɵɵdirectiveInject(i1.ServicioService), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.Router));\n};\nAptoSangreComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AptoSangreComponent,\n  selectors: [[\"app-apto-sangre\"]],\n  viewQuery: function AptoSangreComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.boton_siguiente = _t.first);\n    }\n  },\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"row\"], [1, \"col-md-12\", \"text-center\", \"mt-5\", \"mb-4\"], [1, \"col-md-12\", \"text-center\"], [4, \"ngIf\"], [1, \"row\", \"justify-content-center\"], [1, \"col-12\", \"col-lg-12\", \"mt-3\", \"mb-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", \"border-0\", \"rounded-pill\", \"w-25\", \"mb-2\", 3, \"click\"], [\"siguiente\", \"\"], [3, \"pregunta\", \"botonAparece\"]],\n  template: function AptoSangreComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n      i0.ɵɵtext(3, \"Test - Idoneidad para donar:\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2);\n      i0.ɵɵtemplate(5, AptoSangreComponent_ng_container_5_Template, 2, 1, \"ng-container\", 3);\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"button\", 6, 7);\n      i0.ɵɵlistener(\"click\", function AptoSangreComponent_Template_button_click_8_listener() {\n        return ctx.evaluarRespuesta();\n      });\n      i0.ɵɵtext(10, \"Siguiente\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelement(11, \"app-newsletter-ventana\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.preguntas.length > 0);\n    }\n  },\n  dependencies: [i3.NgIf, i4.NewsletterVentanaComponent, i5.PreguntasComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AptoSangreComponent","constructor","servicio","renderer2","router","ngOnInit","getPreguntas","subscribe","pregunta","preguntas","ngAfterViewInit","boton","boton_siguiente","nativeElement","setStyle","mostrarBoton","event","hayHueco","respuestas","push","length","console","log","evaluarRespuesta","contador","respuesta","preguntas_respuestas","slice","preguntasEnviadas","navigate","skipLocationChange","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\apto-sangre\\apto-sangre.component.html","C:\\Users\\Alicia\\Documents\\Clase\\DAW\\Segundo\\Desafio3_DonantesSangre\\donantesSangrePuertollano\\front\\src\\app\\apto-sangre\\apto-sangre.component.ts"],"sourcesContent":["<div class=\"row\">\r\n  <div class=\"col-md-12 text-center mt-5 mb-4\">\r\n    <h1>Test - Idoneidad para donar:</h1>\r\n  </div>\r\n  <div class=\"col-md-12 text-center\">\r\n    <ng-container *ngIf=\"preguntas.length > 0\">\r\n      <app-preguntas [pregunta] =\"preguntas[contador]\" (botonAparece)=\"mostrarBoton($event)\"></app-preguntas>\r\n    </ng-container>\r\n    <!-- <div class=\"row\">\r\n      <div class=\"col-12 col-md-12\">\r\n        <p>¿Tu pulso son entre 50 y 110 pulsaciones?</p>\r\n        <img class=\"img-fluid w-25\" src=\"../../assets/imagenes/sano.png\">\r\n\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <input #pulso_si type=\"radio\" name=\"pulso\" (change)=\"onItemChange($event)\" class=\"ms-3\">\r\n          <label for=\"pulso_si\">Si</label>\r\n          <input #pulso_no type=\"radio\" name=\"pulso\" (change)=\"onItemChange($event)\" class=\"ms-3\">\r\n          <label for=\"pulso_no\">No</label>\r\n        </div>\r\n      </div>\r\n    </div> -->\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-12 col-lg-12 mt-3 mb-3\">\r\n        <button #siguiente type=\"button\" class=\"btn btn-danger border-0 rounded-pill w-25 mb-2\" (click)=\"evaluarRespuesta()\">Siguiente</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<app-newsletter-ventana></app-newsletter-ventana>\r\n","import { Component, ViewChild, ElementRef, Renderer2, OnInit, AfterViewInit, Output, EventEmitter } from '@angular/core';\r\nimport { Pregunta } from './interface/pregunta';\r\nimport { ServicioService } from './servicio/servicio.service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-apto-sangre',\r\n  templateUrl: './apto-sangre.component.html',\r\n  styleUrls: ['./apto-sangre.component.scss']\r\n})\r\nexport class AptoSangreComponent implements OnInit, AfterViewInit{\r\n  hayHueco : boolean = true;\r\n  contador : number = 0;\r\n  respuestas : any[] = [];\r\n  constructor(private servicio: ServicioService, private renderer2: Renderer2, private router: Router){}\r\n  preguntas: Pregunta[] = [];\r\n  preguntas_respuestas: any[] = [];\r\n  @ViewChild('siguiente') boton_siguiente!: ElementRef<HTMLInputElement>;\r\n\r\n  ngOnInit(): void {\r\n      this.servicio.getPreguntas().subscribe( pregunta => {this.preguntas = pregunta});\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    const boton = this.boton_siguiente.nativeElement;\r\n    this.renderer2.setStyle(boton, 'visibility','hidden');\r\n\r\n  }\r\n\r\n  mostrarBoton(event: string): void{\r\n    const boton = this.boton_siguiente.nativeElement;\r\n    this.renderer2.setStyle(boton, 'visibility','unset');\r\n    if(this.hayHueco){\r\n      this.respuestas.push(event)\r\n      this.hayHueco = false;\r\n    }\r\n    else{\r\n      this.respuestas[this.respuestas.length - 1] = event;\r\n    }\r\n    console.log(this.respuestas);\r\n  }\r\n\r\n  evaluarRespuesta(): void{\r\n\r\n    if(this.respuestas[this.respuestas.length - 1] == this.preguntas[this.contador].respuesta){\r\n      if(this.contador < this.preguntas.length - 1){\r\n        this.contador++;\r\n        this.hayHueco = true;\r\n        const boton = this.boton_siguiente.nativeElement;\r\n        this.renderer2.setStyle(boton, 'visibility','hidden');\r\n      }\r\n      else{\r\n        console.log(\"Ha superado la maxima cantidad de preguntas\");\r\n        this.preguntas_respuestas = [this.preguntas.slice(0, this.contador + 1), (this.respuestas)]\r\n        this.servicio.preguntasEnviadas = this.preguntas_respuestas;\r\n        this.router.navigate(['/resultado'], {skipLocationChange: true});\r\n      }\r\n    }\r\n    else{\r\n\r\n      this.preguntas_respuestas = [this.preguntas.slice(0, this.contador + 1), (this.respuestas)]\r\n      this.servicio.preguntasEnviadas = this.preguntas_respuestas;\r\n      this.router.navigate(['/resultado'], {skipLocationChange: true});\r\n    }\r\n\r\n\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}